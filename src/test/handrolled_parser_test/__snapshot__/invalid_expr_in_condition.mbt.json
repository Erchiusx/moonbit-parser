{
  "type": "Program",
  "body": [
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "main",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Sequence",
          "exprs": [
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::Match",
                "expr": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "1"
                  },
                  "loc": null
                },
                "cases": [
                  {
                    "type": "Case",
                    "pattern": {
                      "type": "Pattern::Any",
                      "loc": null
                    },
                    "guard": null,
                    "body": {
                      "type": "Expr::Constant",
                      "c": {
                        "type": "Constant::Bool",
                        "0": true
                      },
                      "loc": null
                    }
                  }
                ],
                "match_loc": null,
                "using": null,
                "loc": null
              },
              "ifso": {
                "type": "Expr::Unit",
                "loc": null,
                "faked": true
              },
              "ifnot": null,
              "loc": null
            },
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::If",
                "cond": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Bool",
                    "0": true
                  },
                  "loc": null
                },
                "ifso": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "1"
                  },
                  "loc": null
                },
                "ifnot": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "2"
                  },
                  "loc": null
                },
                "loc": null
              },
              "ifso": {
                "type": "Expr::Function",
                "func": {
                  "type": "Func::Lambda",
                  "parameters": [
                    {
                      "type": "Parameter::DiscardPositional",
                      "ty": null,
                      "loc": null
                    }
                  ],
                  "params_loc": null,
                  "body": {
                    "type": "Expr::Unit",
                    "loc": null,
                    "faked": false
                  },
                  "return_type": null,
                  "error_type": {
                    "type": "ErrorType::NoErrorType"
                  },
                  "kind": {
                    "type": "FnKind::Arrow"
                  },
                  "has_error": null,
                  "is_async": false,
                  "loc": null
                },
                "loc": null
              },
              "ifnot": null,
              "loc": null
            },
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::Guard",
                "cond": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Bool",
                    "0": true
                  },
                  "loc": null
                },
                "otherwise": null,
                "body": {
                  "type": "Expr::Unit",
                  "loc": null,
                  "faked": true
                },
                "loc": null
              },
              "ifso": {
                "type": "Expr::Unit",
                "loc": null,
                "faked": true
              },
              "ifnot": null,
              "loc": null
            },
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::For",
                "binders": [
                  [
                    {
                      "type": "Binder",
                      "name": "i",
                      "loc": null
                    },
                    {
                      "type": "Expr::Constant",
                      "c": {
                        "type": "Constant::Int",
                        "0": "0"
                      },
                      "loc": null
                    }
                  ]
                ],
                "condition": {
                  "type": "Expr::Infix",
                  "op": {
                    "type": "Var",
                    "name": {
                      "type": "LongIdent::Ident",
                      "0": "<"
                    },
                    "loc": null
                  },
                  "lhs": {
                    "type": "Expr::Ident",
                    "id": {
                      "type": "Var",
                      "name": {
                        "type": "LongIdent::Ident",
                        "0": "i"
                      },
                      "loc": null
                    },
                    "loc": null
                  },
                  "rhs": {
                    "type": "Expr::Constant",
                    "c": {
                      "type": "Constant::Int",
                      "0": "10"
                    },
                    "loc": null
                  },
                  "loc": null
                },
                "continue_block": [
                  [
                    {
                      "type": "Binder",
                      "name": "i",
                      "loc": null
                    },
                    {
                      "type": "Expr::Infix",
                      "op": {
                        "type": "Var",
                        "name": {
                          "type": "LongIdent::Ident",
                          "0": "+"
                        },
                        "loc": null
                      },
                      "lhs": {
                        "type": "Expr::Ident",
                        "id": {
                          "type": "Var",
                          "name": {
                            "type": "LongIdent::Ident",
                            "0": "i"
                          },
                          "loc": null
                        },
                        "loc": null
                      },
                      "rhs": {
                        "type": "Expr::Constant",
                        "c": {
                          "type": "Constant::Int",
                          "0": "1"
                        },
                        "loc": null
                      },
                      "loc": null
                    }
                  ]
                ],
                "body": {
                  "type": "Expr::Unit",
                  "loc": null,
                  "faked": true
                },
                "for_else": null,
                "label": null,
                "loc": null
              },
              "ifso": {
                "type": "Expr::Unit",
                "loc": null,
                "faked": true
              },
              "ifnot": null,
              "loc": null
            },
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::Try",
                "body": {
                  "type": "Expr::Ident",
                  "id": {
                    "type": "Var",
                    "name": {
                      "type": "LongIdent::Ident",
                      "0": "f"
                    },
                    "loc": null
                  },
                  "loc": null
                },
                "catch": [],
                "catch_all": false,
                "try_else": null,
                "has_try": true,
                "try_loc": null,
                "catch_loc": null,
                "else_loc": null,
                "loc": null
              },
              "ifso": {
                "type": "Expr::Unit",
                "loc": null,
                "faked": true
              },
              "ifnot": null,
              "loc": null
            },
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::Guard",
                "cond": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Bool",
                    "0": true
                  },
                  "loc": null
                },
                "otherwise": null,
                "body": {
                  "type": "Expr::Unit",
                  "loc": null,
                  "faked": true
                },
                "loc": null
              },
              "ifso": {
                "type": "Expr::Unit",
                "loc": null,
                "faked": true
              },
              "ifnot": null,
              "loc": null
            },
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::Break",
                "arg": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "1"
                  },
                  "loc": null
                },
                "label": null,
                "loc": null
              },
              "ifso": {
                "type": "Expr::Unit",
                "loc": null,
                "faked": true
              },
              "ifnot": null,
              "loc": null
            },
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::Return",
                "return_value": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "1"
                  },
                  "loc": null
                },
                "loc": null
              },
              "ifso": {
                "type": "Expr::Function",
                "func": {
                  "type": "Func::Lambda",
                  "parameters": [
                    {
                      "type": "Parameter::DiscardPositional",
                      "ty": null,
                      "loc": null
                    }
                  ],
                  "params_loc": null,
                  "body": {
                    "type": "Expr::Unit",
                    "loc": null,
                    "faked": false
                  },
                  "return_type": null,
                  "error_type": {
                    "type": "ErrorType::NoErrorType"
                  },
                  "kind": {
                    "type": "FnKind::Arrow"
                  },
                  "has_error": null,
                  "is_async": false,
                  "loc": null
                },
                "loc": null
              },
              "ifnot": null,
              "loc": null
            }
          ],
          "last_expr": {
            "type": "Expr::If",
            "cond": {
              "type": "Expr::Continue",
              "args": [
                {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "1"
                  },
                  "loc": null
                }
              ],
              "label": null,
              "loc": null
            },
            "ifso": {
              "type": "Expr::Unit",
              "loc": null,
              "faked": true
            },
            "ifnot": null,
            "loc": null
          },
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Name",
          "constr_id": {
            "type": "ConstrId",
            "id": {
              "type": "LongIdent::Ident",
              "0": "Unit"
            },
            "loc": null
          },
          "tys": [],
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Sequence",
          "exprs": [
            {
              "type": "Expr::Match",
              "expr": {
                "type": "Expr::Guard",
                "cond": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Bool",
                    "0": true
                  },
                  "loc": null
                },
                "otherwise": null,
                "body": {
                  "type": "Expr::Unit",
                  "loc": null,
                  "faked": true
                },
                "loc": null
              },
              "cases": [],
              "match_loc": null,
              "using": null,
              "loc": null
            },
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::Guard",
                "cond": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Bool",
                    "0": true
                  },
                  "loc": null
                },
                "otherwise": null,
                "body": {
                  "type": "Expr::Unit",
                  "loc": null,
                  "faked": true
                },
                "loc": null
              },
              "ifso": {
                "type": "Expr::Unit",
                "loc": null,
                "faked": true
              },
              "ifnot": null,
              "loc": null
            }
          ],
          "last_expr": {
            "type": "Expr::Guard",
            "cond": {
              "type": "Expr::Guard",
              "cond": {
                "type": "Expr::Constant",
                "c": {
                  "type": "Constant::Bool",
                  "0": true
                },
                "loc": null
              },
              "otherwise": null,
              "body": {
                "type": "Expr::Unit",
                "loc": null,
                "faked": true
              },
              "loc": null
            },
            "otherwise": null,
            "body": {
              "type": "Expr::For",
              "binders": [
                [
                  {
                    "type": "Binder",
                    "name": "i",
                    "loc": null
                  },
                  {
                    "type": "Expr::Constant",
                    "c": {
                      "type": "Constant::Int",
                      "0": "0"
                    },
                    "loc": null
                  }
                ]
              ],
              "condition": {
                "type": "Expr::Infix",
                "op": {
                  "type": "Var",
                  "name": {
                    "type": "LongIdent::Ident",
                    "0": "<"
                  },
                  "loc": null
                },
                "lhs": {
                  "type": "Expr::Ident",
                  "id": {
                    "type": "Var",
                    "name": {
                      "type": "LongIdent::Ident",
                      "0": "i"
                    },
                    "loc": null
                  },
                  "loc": null
                },
                "rhs": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "10"
                  },
                  "loc": null
                },
                "loc": null
              },
              "continue_block": [
                [
                  {
                    "type": "Binder",
                    "name": "i",
                    "loc": null
                  },
                  {
                    "type": "Expr::If",
                    "cond": {
                      "type": "Expr::Constant",
                      "c": {
                        "type": "Constant::Bool",
                        "0": true
                      },
                      "loc": null
                    },
                    "ifso": {
                      "type": "Expr::Constant",
                      "c": {
                        "type": "Constant::Int",
                        "0": "0"
                      },
                      "loc": null
                    },
                    "ifnot": {
                      "type": "Expr::Constant",
                      "c": {
                        "type": "Constant::Int",
                        "0": "1"
                      },
                      "loc": null
                    },
                    "loc": null
                  }
                ]
              ],
              "body": {
                "type": "Expr::Unit",
                "loc": null,
                "faked": true
              },
              "for_else": null,
              "label": null,
              "loc": null
            },
            "loc": null
          },
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "g",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Name",
          "constr_id": {
            "type": "ConstrId",
            "id": {
              "type": "LongIdent::Ident",
              "0": "Unit"
            },
            "loc": null
          },
          "tys": [],
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::If",
          "cond": {
            "type": "Expr::Infix",
            "op": {
              "type": "Var",
              "name": {
                "type": "LongIdent::Ident",
                "0": "+"
              },
              "loc": null
            },
            "lhs": {
              "type": "Expr::Constant",
              "c": {
                "type": "Constant::Int",
                "0": "1"
              },
              "loc": null
            },
            "rhs": {
              "type": "Expr::Hole",
              "loc": null,
              "kind": {
                "type": "Hole::Synthesized"
              }
            },
            "loc": null
          },
          "ifso": {
            "type": "Expr::Unit",
            "loc": null,
            "faked": true
          },
          "ifnot": {
            "type": "Expr::Unit",
            "loc": null,
            "faked": true
          },
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopLetDef",
      "binder": {
        "type": "Binder",
        "name": "a",
        "loc": null
      },
      "ty": null,
      "expr": {
        "type": "Expr::Ident",
        "id": {
          "type": "Var",
          "name": {
            "type": "LongIdent::Ident",
            "0": "b"
          },
          "loc": null
        },
        "loc": null
      },
      "vis": {
        "type": "Visibility::Default"
      },
      "is_constant": false,
      "loc": null,
      "attrs": [],
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "common_sub_expression_in_arrow_function",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Name",
          "constr_id": {
            "type": "ConstrId",
            "id": {
              "type": "LongIdent::Ident",
              "0": "Unit"
            },
            "loc": null
          },
          "tys": [],
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::If",
          "cond": {
            "type": "Expr::Tuple",
            "exprs": [
              {
                "type": "Expr::Ident",
                "id": {
                  "type": "Var",
                  "name": {
                    "type": "LongIdent::Ident",
                    "0": "x"
                  },
                  "loc": null
                },
                "loc": null
              },
              {
                "type": "Expr::Ident",
                "id": {
                  "type": "Var",
                  "name": {
                    "type": "LongIdent::Ident",
                    "0": "y"
                  },
                  "loc": null
                },
                "loc": null
              }
            ],
            "loc": null
          },
          "ifso": {
            "type": "Expr::Hole",
            "loc": null,
            "kind": {
              "type": "Hole::Synthesized"
            }
          },
          "ifnot": null,
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopLetDef",
      "binder": {
        "type": "Binder",
        "name": "a",
        "loc": null
      },
      "ty": null,
      "expr": {
        "type": "Expr::Ident",
        "id": {
          "type": "Var",
          "name": {
            "type": "LongIdent::Ident",
            "0": "b"
          },
          "loc": null
        },
        "loc": null
      },
      "vis": {
        "type": "Visibility::Default"
      },
      "is_constant": false,
      "loc": null,
      "attrs": [],
      "doc": ""
    }
  ],
  "diagnostics": [
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 2,
          "column": 6
        },
        "end": {
          "line": 2,
          "column": 25
        }
      },
      "msg": "Unexpected match expression in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 3,
          "column": 6
        },
        "end": {
          "line": 3,
          "column": 25
        }
      },
      "msg": "Unexpected if expression in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 4,
          "column": 12
        },
        "end": {
          "line": 4,
          "column": 16
        }
      },
      "msg": "Unexpected guard statement in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 5,
          "column": 6
        },
        "end": {
          "line": 5,
          "column": 25
        }
      },
      "msg": "Unexpected for expression in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 6,
          "column": 6
        },
        "end": {
          "line": 6,
          "column": 19
        }
      },
      "msg": "Unexpected try expression in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 7,
          "column": 12
        },
        "end": {
          "line": 7,
          "column": 16
        }
      },
      "msg": "Unexpected guard statement in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 8,
          "column": 6
        },
        "end": {
          "line": 8,
          "column": 11
        }
      },
      "msg": "Unexpected break statement in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 9,
          "column": 6
        },
        "end": {
          "line": 9,
          "column": 12
        }
      },
      "msg": "Unexpected return statement in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 10,
          "column": 6
        },
        "end": {
          "line": 10,
          "column": 14
        }
      },
      "msg": "Unexpected break statement in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 14,
          "column": 15
        },
        "end": {
          "line": 14,
          "column": 19
        }
      },
      "msg": "Unexpected guard statement in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 15,
          "column": 12
        },
        "end": {
          "line": 15,
          "column": 16
        }
      },
      "msg": "Unexpected guard statement in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 16,
          "column": 15
        },
        "end": {
          "line": 16,
          "column": 19
        }
      },
      "msg": "Unexpected guard statement in condition"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 21,
          "column": 10
        },
        "end": {
          "line": 21,
          "column": 12
        }
      },
      "msg": "Unexpected token `if`, you may expect simple expression."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 21,
          "column": 29
        },
        "end": {
          "line": 21,
          "column": 31
        }
      },
      "msg": "Unexpected token infix operator, you may expect `;`, `}`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 27,
          "column": 1
        },
        "end": {
          "line": 27,
          "column": 3
        }
      },
      "msg": "Unexpected token here."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 28,
          "column": 13
        },
        "end": {
          "line": 28,
          "column": 16
        }
      },
      "msg": "Unexpected token `let`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/invalid_expr_in_condition.mbt",
        "start": {
          "line": 29,
          "column": 2
        },
        "end": {
          "line": 29,
          "column": 2
        }
      },
      "msg": "Unexpected token here."
    }
  ]
}