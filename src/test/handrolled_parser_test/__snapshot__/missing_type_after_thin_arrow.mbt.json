{
  "type": "Program",
  "body": [
    {
      "type": "Impl::TopTrait",
      "0": {
        "type": "TraitDecl",
        "name": {
          "type": "Binder",
          "name": "T",
          "loc": null
        },
        "supers": [],
        "methods": [
          {
            "type": "TraitMethodDecl",
            "name": {
              "type": "Binder",
              "name": "f",
              "loc": null
            },
            "has_error": null,
            "is_async": false,
            "quantifiers": [],
            "params": [
              {
                "type": "Parameter::DiscardPositional",
                "ty": {
                  "type": "Type::Name",
                  "constr_id": {
                    "type": "ConstrId",
                    "id": {
                      "type": "LongIdent::Ident",
                      "0": "Self"
                    },
                    "loc": null
                  },
                  "tys": [],
                  "loc": null
                },
                "loc": null
              }
            ],
            "return_type": {
              "type": "Type::Name",
              "constr_id": {
                "type": "ConstrId",
                "id": {
                  "type": "LongIdent::Ident",
                  "0": "g"
                },
                "loc": null
              },
              "tys": [],
              "loc": null
            },
            "error_type": {
              "type": "ErrorType::NoErrorType"
            },
            "has_default": null,
            "attrs": [],
            "loc": null
          }
        ],
        "vis": {
          "type": "Visibility::Default"
        },
        "loc": null,
        "attrs": [],
        "doc": ""
      }
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [
          {
            "type": "Parameter::Optional",
            "binder": {
              "type": "Binder",
              "name": "x",
              "loc": null
            },
            "default": {
              "type": "Expr::Constant",
              "c": {
                "type": "Constant::Int",
                "0": "5"
              },
              "loc": null
            },
            "ty": {
              "type": "Type::Name",
              "constr_id": {
                "type": "ConstrId",
                "id": {
                  "type": "LongIdent::Ident",
                  "0": "Int"
                },
                "loc": null
              },
              "tys": [],
              "loc": null
            }
          }
        ],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclStubs",
        "0": {
          "type": "FuncStubs::Import",
          "module_name": "module",
          "func_name": "function"
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "g",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [
          {
            "type": "Parameter::Optional",
            "binder": {
              "type": "Binder",
              "name": "x",
              "loc": null
            },
            "default": {
              "type": "Expr::Constant",
              "c": {
                "type": "Constant::Int",
                "0": "5"
              },
              "loc": null
            },
            "ty": {
              "type": "Type::Name",
              "constr_id": {
                "type": "ConstrId",
                "id": {
                  "type": "LongIdent::Ident",
                  "0": "Int"
                },
                "loc": null
              },
              "tys": [],
              "loc": null
            }
          }
        ],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "h",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [
          {
            "type": "Parameter::Optional",
            "binder": {
              "type": "Binder",
              "name": "x",
              "loc": null
            },
            "default": {
              "type": "Expr::Constant",
              "c": {
                "type": "Constant::Int",
                "0": "5"
              },
              "loc": null
            },
            "ty": {
              "type": "Type::Name",
              "constr_id": {
                "type": "ConstrId",
                "id": {
                  "type": "LongIdent::Ident",
                  "0": "Int"
                },
                "loc": null
              },
              "tys": [],
              "loc": null
            }
          }
        ],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclStubs",
        "0": {
          "type": "FuncStubs::Embedded",
          "language": "js",
          "code": {
            "type": "EmbeddedCode::CodeString",
            "0": "code"
          }
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopImpl",
      "self_ty": {
        "type": "Type::Name",
        "constr_id": {
          "type": "ConstrId",
          "id": {
            "type": "LongIdent::Ident",
            "0": "T2"
          },
          "loc": null
        },
        "tys": [],
        "loc": null
      },
      "trait": {
        "type": "TypeName",
        "name": {
          "type": "LongIdent::Ident",
          "0": "T1"
        },
        "is_object": false,
        "loc": null
      },
      "method_name": {
        "type": "Binder",
        "name": "f",
        "loc": null
      },
      "has_error": null,
      "quantifiers": [],
      "params": [
        {
          "type": "Parameter::Positional",
          "binder": {
            "type": "Binder",
            "name": "self",
            "loc": null
          },
          "ty": null
        },
        {
          "type": "Parameter::Positional",
          "binder": {
            "type": "Binder",
            "name": "a",
            "loc": null
          },
          "ty": null
        },
        {
          "type": "Parameter::Positional",
          "binder": {
            "type": "Binder",
            "name": "b",
            "loc": null
          },
          "ty": null
        }
      ],
      "ret_ty": {
        "type": "Type::Any",
        "loc": null
      },
      "err_ty": {
        "type": "ErrorType::NoErrorType"
      },
      "body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "vis": {
        "type": "Visibility::Default"
      },
      "loc": null,
      "attrs": [],
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f1",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopLetDef",
      "binder": {
        "type": "Binder",
        "name": "a",
        "loc": null
      },
      "ty": null,
      "expr": {
        "type": "Expr::Constant",
        "c": {
          "type": "Constant::Int",
          "0": "1"
        },
        "loc": null
      },
      "vis": {
        "type": "Visibility::Default"
      },
      "is_constant": false,
      "loc": null,
      "attrs": [],
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f2",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopImplRelation",
      "self_ty": {
        "type": "Type::Name",
        "constr_id": {
          "type": "ConstrId",
          "id": {
            "type": "LongIdent::Ident",
            "0": "T2"
          },
          "loc": null
        },
        "tys": [],
        "loc": null
      },
      "trait": {
        "type": "TypeName",
        "name": {
          "type": "LongIdent::Ident",
          "0": "T1"
        },
        "is_object": false,
        "loc": null
      },
      "quantifiers": [],
      "vis": {
        "type": "Visibility::Default"
      },
      "attrs": [],
      "loc": null,
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f3",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f4",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopTest",
      "expr": {
        "type": "Expr::Unit",
        "loc": null,
        "faked": true
      },
      "name": null,
      "params": null,
      "local_types": [],
      "loc": null,
      "attrs": [],
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f5",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopBatchTypeAlias",
      "pkg": null,
      "targets": [
        {
          "type": "AliasTarget",
          "binder": {
            "type": "Binder",
            "name": "T2",
            "loc": null
          },
          "target": {
            "type": "Label",
            "name": "T1",
            "loc": null
          }
        }
      ],
      "vis": {
        "type": "Visibility::Default"
      },
      "loc": null,
      "attrs": [],
      "is_list": false,
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f6",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Arrow",
          "args": [],
          "res": {
            "type": "Type::Any",
            "loc": null
          },
          "err": {
            "type": "ErrorType::NoErrorType"
          },
          "is_async": true,
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Hole",
          "loc": null,
          "kind": {
            "type": "Hole::Synthesized"
          }
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f7",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopLetDef",
      "binder": {
        "type": "Binder",
        "name": "CONST",
        "loc": null
      },
      "ty": null,
      "expr": {
        "type": "Expr::Constant",
        "c": {
          "type": "Constant::Int",
          "0": "5"
        },
        "loc": null
      },
      "vis": {
        "type": "Visibility::Default"
      },
      "is_constant": true,
      "loc": null,
      "attrs": [],
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f8",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopTrait",
      "0": {
        "type": "TraitDecl",
        "name": {
          "type": "Binder",
          "name": "AnotherTrait",
          "loc": null
        },
        "supers": [],
        "methods": [],
        "vis": {
          "type": "Visibility::Default"
        },
        "loc": null,
        "attrs": [],
        "doc": ""
      }
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f9",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopTypeDef",
      "0": {
        "type": "TypeDecl",
        "tycon": "MyRcd",
        "tycon_loc": null,
        "params": [],
        "components": {
          "type": "TypeDesc::Record",
          "0": []
        },
        "attrs": [],
        "doc": "",
        "type_vis": {
          "type": "Visibility::Default"
        },
        "deriving": [],
        "loc": null
      }
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f10",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopTypeDef",
      "0": {
        "type": "TypeDecl",
        "tycon": "MyEnum",
        "tycon_loc": null,
        "params": [],
        "components": {
          "type": "TypeDesc::Variant",
          "0": []
        },
        "attrs": [],
        "doc": "",
        "type_vis": {
          "type": "Visibility::Default"
        },
        "deriving": [],
        "loc": null
      }
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f1",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopLetDef",
      "binder": {
        "type": "Binder",
        "name": "a",
        "loc": null
      },
      "ty": null,
      "expr": {
        "type": "Expr::Constant",
        "c": {
          "type": "Constant::Int",
          "0": "1"
        },
        "loc": null
      },
      "vis": {
        "type": "Visibility::Default"
      },
      "is_constant": false,
      "loc": null,
      "attrs": [],
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f2",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopImplRelation",
      "self_ty": {
        "type": "Type::Name",
        "constr_id": {
          "type": "ConstrId",
          "id": {
            "type": "LongIdent::Ident",
            "0": "T2"
          },
          "loc": null
        },
        "tys": [],
        "loc": null
      },
      "trait": {
        "type": "TypeName",
        "name": {
          "type": "LongIdent::Ident",
          "0": "T1"
        },
        "is_object": false,
        "loc": null
      },
      "quantifiers": [],
      "vis": {
        "type": "Visibility::Default"
      },
      "attrs": [],
      "loc": null,
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f3",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f4",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopTest",
      "expr": {
        "type": "Expr::Unit",
        "loc": null,
        "faked": true
      },
      "name": null,
      "params": null,
      "local_types": [],
      "loc": null,
      "attrs": [],
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f5",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopBatchTypeAlias",
      "pkg": null,
      "targets": [
        {
          "type": "AliasTarget",
          "binder": {
            "type": "Binder",
            "name": "T2",
            "loc": null
          },
          "target": {
            "type": "Label",
            "name": "T1",
            "loc": null
          }
        }
      ],
      "vis": {
        "type": "Visibility::Default"
      },
      "loc": null,
      "attrs": [],
      "is_list": false,
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f6",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Arrow",
          "args": [],
          "res": {
            "type": "Type::Any",
            "loc": null
          },
          "err": {
            "type": "ErrorType::NoErrorType"
          },
          "is_async": true,
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Hole",
          "loc": null,
          "kind": {
            "type": "Hole::Synthesized"
          }
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f7",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopLetDef",
      "binder": {
        "type": "Binder",
        "name": "CONST",
        "loc": null
      },
      "ty": null,
      "expr": {
        "type": "Expr::Constant",
        "c": {
          "type": "Constant::Int",
          "0": "5"
        },
        "loc": null
      },
      "vis": {
        "type": "Visibility::Default"
      },
      "is_constant": true,
      "loc": null,
      "attrs": [],
      "doc": ""
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f8",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopTrait",
      "0": {
        "type": "TraitDecl",
        "name": {
          "type": "Binder",
          "name": "AnotherTrait",
          "loc": null
        },
        "supers": [],
        "methods": [],
        "vis": {
          "type": "Visibility::Default"
        },
        "loc": null,
        "attrs": [],
        "doc": ""
      }
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f9",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopTypeDef",
      "0": {
        "type": "TypeDecl",
        "tycon": "MyRcd",
        "tycon_loc": null,
        "params": [],
        "components": {
          "type": "TypeDesc::Record",
          "0": []
        },
        "attrs": [],
        "doc": "",
        "type_vis": {
          "type": "Visibility::Default"
        },
        "deriving": [],
        "loc": null
      }
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "f10",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": [],
        "params_loc": null,
        "quantifiers": [],
        "return_type": {
          "type": "Type::Any",
          "loc": null
        },
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Unit",
          "loc": null,
          "faked": true
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopTypeDef",
      "0": {
        "type": "TypeDecl",
        "tycon": "MyEnum",
        "tycon_loc": null,
        "params": [],
        "components": {
          "type": "TypeDesc::Variant",
          "0": []
        },
        "attrs": [],
        "doc": "",
        "type_vis": {
          "type": "Visibility::Default"
        },
        "deriving": [],
        "loc": null
      }
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "main",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": " "
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::LetFn",
          "name": {
            "type": "Binder",
            "name": "f",
            "loc": null
          },
          "func": {
            "type": "Func::Lambda",
            "parameters": [],
            "params_loc": null,
            "body": {
              "type": "Expr::Unit",
              "loc": null,
              "faked": true
            },
            "return_type": {
              "type": "Type::Any",
              "loc": null
            },
            "error_type": {
              "type": "ErrorType::NoErrorType"
            },
            "kind": {
              "type": "FnKind::Lambda"
            },
            "has_error": null,
            "is_async": false,
            "loc": null
          },
          "body": {
            "type": "Expr::Let",
            "pattern": {
              "type": "Pattern::Var",
              "0": {
                "type": "Binder",
                "name": "g",
                "loc": null
              }
            },
            "expr": {
              "type": "Expr::Function",
              "func": {
                "type": "Func::Lambda",
                "parameters": [],
                "params_loc": null,
                "body": {
                  "type": "Expr::Unit",
                  "loc": null,
                  "faked": true
                },
                "return_type": {
                  "type": "Type::Any",
                  "loc": null
                },
                "error_type": {
                  "type": "ErrorType::NoErrorType"
                },
                "kind": {
                  "type": "FnKind::Lambda"
                },
                "has_error": null,
                "is_async": false,
                "loc": null
              },
              "loc": null
            },
            "body": {
              "type": "Expr::Unit",
              "loc": null,
              "faked": true
            },
            "loc": null
          },
          "loc": null
        }
      },
      "loc": null
    }
  ],
  "diagnostics": [
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 6,
          "column": 4
        },
        "end": {
          "line": 6,
          "column": 5
        }
      },
      "msg": "Unexpected token `(`, you may expect `;`, `}`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 9,
          "column": 23
        },
        "end": {
          "line": 9,
          "column": 24
        }
      },
      "msg": "Unexpected token `=`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 10,
          "column": 23
        },
        "end": {
          "line": 10,
          "column": 24
        }
      },
      "msg": "Unexpected token `{`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 11,
          "column": 35
        },
        "end": {
          "line": 11,
          "column": 36
        }
      },
      "msg": "Unexpected token `=`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 13,
          "column": 36
        },
        "end": {
          "line": 13,
          "column": 37
        }
      },
      "msg": "Unexpected token `{`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 19,
          "column": 7
        },
        "end": {
          "line": 19,
          "column": 10
        }
      },
      "msg": "Unexpected token `let`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 19,
          "column": 7
        },
        "end": {
          "line": 19,
          "column": 10
        }
      },
      "msg": "Unexpected token `let`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 21,
          "column": 7
        },
        "end": {
          "line": 21,
          "column": 11
        }
      },
      "msg": "Unexpected token `impl`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 21,
          "column": 7
        },
        "end": {
          "line": 21,
          "column": 11
        }
      },
      "msg": "Unexpected token `impl`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 23,
          "column": 7
        },
        "end": {
          "line": 23,
          "column": 9
        }
      },
      "msg": "Unexpected token `fn`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 23,
          "column": 7
        },
        "end": {
          "line": 23,
          "column": 9
        }
      },
      "msg": "Unexpected token `fn`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 24,
          "column": 7
        },
        "end": {
          "line": 24,
          "column": 11
        }
      },
      "msg": "Unexpected token `test`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 24,
          "column": 7
        },
        "end": {
          "line": 24,
          "column": 11
        }
      },
      "msg": "Unexpected token `test`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 26,
          "column": 7
        },
        "end": {
          "line": 26,
          "column": 16
        }
      },
      "msg": "Unexpected token `typealias`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 26,
          "column": 7
        },
        "end": {
          "line": 26,
          "column": 16
        }
      },
      "msg": "Unexpected token `typealias`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 28,
          "column": 13
        },
        "end": {
          "line": 28,
          "column": 15
        }
      },
      "msg": "Unexpected token `fn`, you may expect `(`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 29,
          "column": 7
        },
        "end": {
          "line": 29,
          "column": 12
        }
      },
      "msg": "Unexpected token `const`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 29,
          "column": 7
        },
        "end": {
          "line": 29,
          "column": 12
        }
      },
      "msg": "Unexpected token `const`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 31,
          "column": 7
        },
        "end": {
          "line": 31,
          "column": 12
        }
      },
      "msg": "Unexpected token `trait`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 31,
          "column": 7
        },
        "end": {
          "line": 31,
          "column": 12
        }
      },
      "msg": "Unexpected token `trait`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 33,
          "column": 7
        },
        "end": {
          "line": 33,
          "column": 13
        }
      },
      "msg": "Unexpected token `struct`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 33,
          "column": 7
        },
        "end": {
          "line": 33,
          "column": 13
        }
      },
      "msg": "Unexpected token `struct`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 35,
          "column": 7
        },
        "end": {
          "line": 35,
          "column": 11
        }
      },
      "msg": "Unexpected token `enum`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 35,
          "column": 7
        },
        "end": {
          "line": 35,
          "column": 11
        }
      },
      "msg": "Unexpected token `enum`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 41,
          "column": 4
        }
      },
      "msg": "Unexpected token `let`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 41,
          "column": 4
        }
      },
      "msg": "Unexpected token `let`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 43,
          "column": 1
        },
        "end": {
          "line": 43,
          "column": 5
        }
      },
      "msg": "Unexpected token `impl`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 43,
          "column": 1
        },
        "end": {
          "line": 43,
          "column": 5
        }
      },
      "msg": "Unexpected token `impl`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 45,
          "column": 1
        },
        "end": {
          "line": 45,
          "column": 3
        }
      },
      "msg": "Unexpected token `fn`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 45,
          "column": 1
        },
        "end": {
          "line": 45,
          "column": 3
        }
      },
      "msg": "Unexpected token `fn`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 46,
          "column": 1
        },
        "end": {
          "line": 46,
          "column": 5
        }
      },
      "msg": "Unexpected token `test`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 46,
          "column": 1
        },
        "end": {
          "line": 46,
          "column": 5
        }
      },
      "msg": "Unexpected token `test`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 48,
          "column": 1
        },
        "end": {
          "line": 48,
          "column": 10
        }
      },
      "msg": "Unexpected token `typealias`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 48,
          "column": 1
        },
        "end": {
          "line": 48,
          "column": 10
        }
      },
      "msg": "Unexpected token `typealias`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 50,
          "column": 7
        },
        "end": {
          "line": 50,
          "column": 9
        }
      },
      "msg": "Unexpected token `fn`, you may expect `(`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 51,
          "column": 1
        },
        "end": {
          "line": 51,
          "column": 6
        }
      },
      "msg": "Unexpected token `const`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 51,
          "column": 1
        },
        "end": {
          "line": 51,
          "column": 6
        }
      },
      "msg": "Unexpected token `const`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 53,
          "column": 1
        },
        "end": {
          "line": 53,
          "column": 6
        }
      },
      "msg": "Unexpected token `trait`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 53,
          "column": 1
        },
        "end": {
          "line": 53,
          "column": 6
        }
      },
      "msg": "Unexpected token `trait`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 55,
          "column": 1
        },
        "end": {
          "line": 55,
          "column": 7
        }
      },
      "msg": "Unexpected token `struct`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 55,
          "column": 1
        },
        "end": {
          "line": 55,
          "column": 7
        }
      },
      "msg": "Unexpected token `struct`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 57,
          "column": 1
        },
        "end": {
          "line": 57,
          "column": 5
        }
      },
      "msg": "Unexpected token `enum`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 57,
          "column": 1
        },
        "end": {
          "line": 57,
          "column": 5
        }
      },
      "msg": "Unexpected token `enum`, you may expect `{`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 62,
          "column": 13
        },
        "end": {
          "line": 62,
          "column": 14
        }
      },
      "msg": "Unexpected token `{`, you may expect return type annotation."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/missing_type_after_thin_arrow.mbt",
        "start": {
          "line": 65,
          "column": 19
        },
        "end": {
          "line": 65,
          "column": 20
        }
      },
      "msg": "Unexpected token `{`, you may expect return type annotation."
    }
  ]
}