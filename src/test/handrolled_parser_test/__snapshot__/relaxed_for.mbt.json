{
  "type": "Program",
  "body": [
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "init",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Sequence",
          "exprs": [
            {
              "type": "Expr::For",
              "binders": [
                [
                  {
                    "type": "Binder",
                    "name": "i",
                    "loc": null
                  },
                  {
                    "type": "Expr::Constant",
                    "c": {
                      "type": "Constant::Int",
                      "0": "0"
                    },
                    "loc": null
                  }
                ],
                [
                  {
                    "type": "Binder",
                    "name": "j",
                    "loc": null
                  },
                  {
                    "type": "Expr::Constant",
                    "c": {
                      "type": "Constant::Int",
                      "0": "0"
                    },
                    "loc": null
                  }
                ]
              ],
              "condition": null,
              "continue_block": [],
              "body": {
                "type": "Expr::If",
                "cond": {
                  "type": "Expr::Infix",
                  "op": {
                    "type": "Var",
                    "name": {
                      "type": "LongIdent::Ident",
                      "0": "=="
                    },
                    "loc": null
                  },
                  "lhs": {
                    "type": "Expr::Ident",
                    "id": {
                      "type": "Var",
                      "name": {
                        "type": "LongIdent::Ident",
                        "0": "i"
                      },
                      "loc": null
                    },
                    "loc": null
                  },
                  "rhs": {
                    "type": "Expr::Ident",
                    "id": {
                      "type": "Var",
                      "name": {
                        "type": "LongIdent::Ident",
                        "0": "j"
                      },
                      "loc": null
                    },
                    "loc": null
                  },
                  "loc": null
                },
                "ifso": {
                  "type": "Expr::Break",
                  "arg": {
                    "type": "Expr::Constant",
                    "c": {
                      "type": "Constant::Int",
                      "0": "3"
                    },
                    "loc": null
                  },
                  "label": null,
                  "loc": null
                },
                "ifnot": null,
                "loc": null
              },
              "for_else": null,
              "label": null,
              "loc": null
            },
            {
              "type": "Expr::For",
              "binders": [],
              "condition": null,
              "continue_block": [],
              "body": {
                "type": "Expr::Break",
                "arg": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "3"
                  },
                  "loc": null
                },
                "label": null,
                "loc": null
              },
              "for_else": null,
              "label": null,
              "loc": null
            }
          ],
          "last_expr": {
            "type": "Expr::For",
            "binders": [
              [
                {
                  "type": "Binder",
                  "name": "i",
                  "loc": null
                },
                {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "0"
                  },
                  "loc": null
                }
              ],
              [
                {
                  "type": "Binder",
                  "name": "j",
                  "loc": null
                },
                {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "0"
                  },
                  "loc": null
                }
              ]
            ],
            "condition": {
              "type": "Expr::Group",
              "expr": {
                "type": "Expr::Break",
                "arg": null,
                "label": null,
                "loc": null
              },
              "group": {
                "type": "Group::Brace"
              },
              "loc": null
            },
            "continue_block": [
              [
                {
                  "type": "Binder",
                  "name": "",
                  "loc": null
                },
                {
                  "type": "Expr::Hole",
                  "loc": null,
                  "kind": {
                    "type": "Hole::Synthesized"
                  }
                }
              ]
            ],
            "body": {
              "type": "Expr::Hole",
              "loc": null,
              "kind": {
                "type": "Hole::Synthesized"
              }
            },
            "for_else": null,
            "label": null,
            "loc": null
          },
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopLetDef",
      "binder": {
        "type": "Binder",
        "name": "a",
        "loc": null
      },
      "ty": null,
      "expr": {
        "type": "Expr::Constant",
        "c": {
          "type": "Constant::Int",
          "0": "0"
        },
        "loc": null
      },
      "vis": {
        "type": "Visibility::Default"
      },
      "is_constant": false,
      "loc": null,
      "attrs": [],
      "doc": ""
    }
  ],
  "diagnostics": [
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/relaxed_for.mbt",
        "start": {
          "line": 12,
          "column": 3
        },
        "end": {
          "line": 12,
          "column": 6
        }
      },
      "msg": "Unexpected token `let`, you may expect id (lowercase start)."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/relaxed_for.mbt",
        "start": {
          "line": 15,
          "column": 1
        },
        "end": {
          "line": 15,
          "column": 1
        }
      },
      "msg": "Unexpected token here."
    }
  ]
}