{
  "type": "Program",
  "body": [
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "init",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Try",
          "body": {
            "type": "Expr::Try",
            "body": {
              "type": "Expr::Constant",
              "c": {
                "type": "Constant::Int",
                "0": "1"
              },
              "loc": null
            },
            "catch": [
              {
                "type": "Case",
                "pattern": {
                  "type": "Pattern::Any",
                  "loc": null
                },
                "guard": null,
                "body": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "2"
                  },
                  "loc": null
                }
              }
            ],
            "catch_all": false,
            "try_else": null,
            "has_try": true,
            "try_loc": null,
            "catch_loc": null,
            "else_loc": null,
            "loc": null
          },
          "catch": [
            {
              "type": "Case",
              "pattern": {
                "type": "Pattern::Any",
                "loc": null
              },
              "guard": null,
              "body": {
                "type": "Expr::Constant",
                "c": {
                  "type": "Constant::Int",
                  "0": "3"
                },
                "loc": null
              }
            }
          ],
          "catch_all": false,
          "try_else": null,
          "has_try": true,
          "try_loc": null,
          "catch_loc": null,
          "else_loc": null,
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "init",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Try",
          "body": {
            "type": "Expr::If",
            "cond": {
              "type": "Expr::Constant",
              "c": {
                "type": "Constant::Bool",
                "0": true
              },
              "loc": null
            },
            "ifso": {
              "type": "Expr::Constant",
              "c": {
                "type": "Constant::Int",
                "0": "1"
              },
              "loc": null
            },
            "ifnot": {
              "type": "Expr::Constant",
              "c": {
                "type": "Constant::Int",
                "0": "2"
              },
              "loc": null
            },
            "loc": null
          },
          "catch": [
            {
              "type": "Case",
              "pattern": {
                "type": "Pattern::Any",
                "loc": null
              },
              "guard": null,
              "body": {
                "type": "Expr::Constant",
                "c": {
                  "type": "Constant::Int",
                  "0": "3"
                },
                "loc": null
              }
            }
          ],
          "catch_all": false,
          "try_else": null,
          "has_try": true,
          "try_loc": null,
          "catch_loc": null,
          "else_loc": null,
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "init",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Try",
          "body": {
            "type": "Expr::Loop",
            "args": [
              {
                "type": "Expr::Constant",
                "c": {
                  "type": "Constant::Int",
                  "0": "1"
                },
                "loc": null
              }
            ],
            "body": [
              {
                "type": "MultiArgCase",
                "patterns": [
                  {
                    "type": "Pattern::Any",
                    "loc": null
                  }
                ],
                "guard": null,
                "body": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "2"
                  },
                  "loc": null
                }
              }
            ],
            "label": null,
            "loop_loc": null,
            "loc": null
          },
          "catch": [
            {
              "type": "Case",
              "pattern": {
                "type": "Pattern::Any",
                "loc": null
              },
              "guard": null,
              "body": {
                "type": "Expr::Constant",
                "c": {
                  "type": "Constant::Int",
                  "0": "3"
                },
                "loc": null
              }
            }
          ],
          "catch_all": false,
          "try_else": null,
          "has_try": true,
          "try_loc": null,
          "catch_loc": null,
          "else_loc": null,
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "init",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Try",
          "body": {
            "type": "Expr::Match",
            "expr": {
              "type": "Expr::Constant",
              "c": {
                "type": "Constant::Int",
                "0": "1"
              },
              "loc": null
            },
            "cases": [
              {
                "type": "Case",
                "pattern": {
                  "type": "Pattern::Any",
                  "loc": null
                },
                "guard": null,
                "body": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "2"
                  },
                  "loc": null
                }
              }
            ],
            "match_loc": null,
            "using": null,
            "loc": null
          },
          "catch": [
            {
              "type": "Case",
              "pattern": {
                "type": "Pattern::Any",
                "loc": null
              },
              "guard": null,
              "body": {
                "type": "Expr::Constant",
                "c": {
                  "type": "Constant::Int",
                  "0": "3"
                },
                "loc": null
              }
            }
          ],
          "catch_all": false,
          "try_else": null,
          "has_try": true,
          "try_loc": null,
          "catch_loc": null,
          "else_loc": null,
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "init",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::TryOperator",
          "body": {
            "type": "Expr::Hole",
            "loc": null,
            "kind": {
              "type": "Hole::Synthesized"
            }
          },
          "kind": {
            "type": "TryOperatorKind::Question"
          },
          "try_loc": null,
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "init",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Try",
          "body": {
            "type": "Expr::Constant",
            "c": {
              "type": "Constant::Int",
              "0": "42"
            },
            "loc": null
          },
          "catch": [
            {
              "type": "Case",
              "pattern": {
                "type": "Pattern::Any",
                "loc": null
              },
              "guard": null,
              "body": {
                "type": "Expr::Constant",
                "c": {
                  "type": "Constant::Int",
                  "0": "2"
                },
                "loc": null
              }
            }
          ],
          "catch_all": false,
          "try_else": null,
          "has_try": true,
          "try_loc": null,
          "catch_loc": null,
          "else_loc": null,
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "init",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Let",
          "pattern": {
            "type": "Pattern::Any",
            "loc": null
          },
          "expr": {
            "type": "Expr::Try",
            "body": {
              "type": "Expr::Constant",
              "c": {
                "type": "Constant::Int",
                "0": "1"
              },
              "loc": null
            },
            "catch": [
              {
                "type": "Case",
                "pattern": {
                  "type": "Pattern::Any",
                  "loc": null
                },
                "guard": null,
                "body": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "2"
                  },
                  "loc": null
                }
              }
            ],
            "catch_all": false,
            "try_else": null,
            "has_try": false,
            "try_loc": null,
            "catch_loc": null,
            "else_loc": null,
            "loc": null
          },
          "body": {
            "type": "Expr::Unit",
            "loc": null,
            "faked": true
          },
          "loc": null
        }
      },
      "loc": null
    },
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "init",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Let",
          "pattern": {
            "type": "Pattern::Any",
            "loc": null
          },
          "expr": {
            "type": "Expr::Try",
            "body": {
              "type": "Expr::Constant",
              "c": {
                "type": "Constant::Int",
                "0": "1"
              },
              "loc": null
            },
            "catch": [
              {
                "type": "Case",
                "pattern": {
                  "type": "Pattern::Any",
                  "loc": null
                },
                "guard": null,
                "body": {
                  "type": "Expr::Constant",
                  "c": {
                    "type": "Constant::Int",
                    "0": "2"
                  },
                  "loc": null
                }
              }
            ],
            "catch_all": false,
            "try_else": null,
            "has_try": false,
            "try_loc": null,
            "catch_loc": null,
            "else_loc": null,
            "loc": null
          },
          "body": {
            "type": "Expr::Unit",
            "loc": null,
            "faked": true
          },
          "loc": null
        }
      },
      "loc": null
    }
  ],
  "diagnostics": [
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/try_error.mbt",
        "start": {
          "line": 3,
          "column": 7
        },
        "end": {
          "line": 3,
          "column": 27
        }
      },
      "msg": "Unexpected try expression in the try body"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/try_error.mbt",
        "start": {
          "line": 7,
          "column": 7
        },
        "end": {
          "line": 7,
          "column": 29
        }
      },
      "msg": "Unexpected if expression in the try body"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/try_error.mbt",
        "start": {
          "line": 12,
          "column": 7
        },
        "end": {
          "line": 12,
          "column": 22
        }
      },
      "msg": "Unexpected loop expression in the try body"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/try_error.mbt",
        "start": {
          "line": 17,
          "column": 7
        },
        "end": {
          "line": 17,
          "column": 23
        }
      },
      "msg": "Unexpected match expression in the try body"
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/try_error.mbt",
        "start": {
          "line": 22,
          "column": 8
        },
        "end": {
          "line": 22,
          "column": 11
        }
      },
      "msg": "Unexpected token `try`, you may expect simple expression."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/try_error.mbt",
        "start": {
          "line": 25,
          "column": 1
        },
        "end": {
          "line": 25,
          "column": 3
        }
      },
      "msg": "Unexpected token here."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/try_error.mbt",
        "start": {
          "line": 26,
          "column": 27
        },
        "end": {
          "line": 26,
          "column": 32
        }
      },
      "msg": "Unexpected token `catch`, you may expect `;`, `}`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/try_error.mbt",
        "start": {
          "line": 29,
          "column": 1
        },
        "end": {
          "line": 29,
          "column": 3
        }
      },
      "msg": "Unexpected token here."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/try_error.mbt",
        "start": {
          "line": 31,
          "column": 30
        },
        "end": {
          "line": 31,
          "column": 31
        }
      },
      "msg": "Unexpected token `+`, you may expect `;`, `}`."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/try_error.mbt",
        "start": {
          "line": 34,
          "column": 1
        },
        "end": {
          "line": 34,
          "column": 3
        }
      },
      "msg": "Unexpected token here."
    },
    {
      "type": "Error",
      "loc": {
        "file": "src/test/handrolled_parser_test/fixtures/try_error.mbt",
        "start": {
          "line": 36,
          "column": 29
        },
        "end": {
          "line": 36,
          "column": 31
        }
      },
      "msg": "Unexpected token `as`, you may expect `;`, `}`."
    }
  ]
}