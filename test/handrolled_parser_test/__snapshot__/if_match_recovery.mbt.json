{
  "type": "Program",
  "body": [
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "init",
          "loc": "2:4-2:8"
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": "2:9-2:8",
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Sequence",
          "exprs": [
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::Ident",
                "id": {
                  "type": "Var",
                  "name": {
                    "type": "LongIdent::Ident",
                    "0": "cond"
                  },
                  "loc": "3:6-3:10"
                },
                "loc": "3:6-3:10"
              },
              "ifso": {
                "type": "Expr::Hole",
                "loc": "3:10-3:10",
                "kind": {
                  "type": "Hole::Synthesized"
                }
              },
              "ifnot": null,
              "loc": "3:3-3:10"
            },
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::Ident",
                "id": {
                  "type": "Var",
                  "name": {
                    "type": "LongIdent::Ident",
                    "0": "parse"
                  },
                  "loc": "4:6-4:11"
                },
                "loc": "4:6-4:11"
              },
              "ifso": {
                "type": "Expr::Hole",
                "loc": "4:12-4:17",
                "kind": {
                  "type": "Hole::Synthesized"
                }
              },
              "ifnot": null,
              "loc": "4:3-4:17"
            },
            {
              "type": "Expr::If",
              "cond": {
                "type": "Expr::Ident",
                "id": {
                  "type": "Var",
                  "name": {
                    "type": "LongIdent::Ident",
                    "0": "parse"
                  },
                  "loc": "5:6-5:11"
                },
                "loc": "5:6-5:11"
              },
              "ifso": {
                "type": "Expr::Unit",
                "loc": "5:18-6:4",
                "faked": true
              },
              "ifnot": null,
              "loc": "5:3-6:4"
            },
            {
              "type": "Expr::Match",
              "expr": {
                "type": "Expr::Ident",
                "id": {
                  "type": "Var",
                  "name": {
                    "type": "LongIdent::Ident",
                    "0": "e"
                  },
                  "loc": "8:9-8:10"
                },
                "loc": "8:9-8:10"
              },
              "cases": [],
              "match_loc": "8:3-8:10",
              "using": null,
              "loc": "8:3-8:10"
            },
            {
              "type": "Expr::Match",
              "expr": {
                "type": "Expr::Ident",
                "id": {
                  "type": "Var",
                  "name": {
                    "type": "LongIdent::Ident",
                    "0": "parse"
                  },
                  "loc": "9:9-9:14"
                },
                "loc": "9:9-9:14"
              },
              "cases": [],
              "match_loc": "9:3-9:20",
              "using": null,
              "loc": "9:3-9:20"
            }
          ],
          "last_expr": {
            "type": "Expr::Match",
            "expr": {
              "type": "Expr::Ident",
              "id": {
                "type": "Var",
                "name": {
                  "type": "LongIdent::Ident",
                  "0": "parse"
                },
                "loc": "10:9-10:14"
              },
              "loc": "10:9-10:14"
            },
            "cases": [],
            "match_loc": "10:3-10:22",
            "using": null,
            "loc": "10:3-11:4"
          },
          "loc": "3:3-11:4"
        }
      },
      "loc": "2:1-12:2"
    }
  ],
  "diagnostics": [
    {
      "type": "Error",
      "loc": "3:10-3:10",
      "msg": "Unexpected line break here, missing `{` at the end of this line."
    },
    {
      "type": "Error",
      "loc": "4:12-4:17",
      "msg": "Unexpected token id (lowercase start), you may expect `{`."
    },
    {
      "type": "Error",
      "loc": "5:12-5:17",
      "msg": "Unexpected token id (lowercase start), you may expect `{`."
    },
    {
      "type": "Error",
      "loc": "8:10-8:10",
      "msg": "Unexpected line break here, missing `{` at the end of this line."
    },
    {
      "type": "Error",
      "loc": "9:15-9:20",
      "msg": "Unexpected token id (lowercase start), you may expect `{`."
    },
    {
      "type": "Error",
      "loc": "10:15-10:20",
      "msg": "Unexpected token id (lowercase start), you may expect `{`."
    }
  ]
}