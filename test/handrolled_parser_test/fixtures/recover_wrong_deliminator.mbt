// Comma is not a valid delimiter for enum, suberror, and match.
// But sometimes it is used by mistake, or generated by AI.
// This test is to check if the parser can recover from this error

enum SyntaxErrorEnum {
  Constr1(Int, Bool),
  Constr2,
  Constr3
}

enum SyntaxErrorEnum2 {
  Constr1(Int, Bool),
  Constr2,
  Constr3,
}

struct SyntaxErrorStruct {
  field1 : Int,
  field2 : Bool,
  field3 : (Int, Bool)  
}

struct SyntaxErrorStruct2 {
  field1 : Int,
  field2 : Bool,
  field3 : (Int, Bool)  
}

suberror SyntaxErrorErr {
  Error1,
  Error2(Int, Bool)
}

suberror SyntaxErrorErr {
  Error1,
  Error2(Int, Bool),
}

fn main {
  match 5 {
    1 => println("1"),
    2 => println("2"),
    3 => println("3")
  }
  match 6 {
    1 => println("1"),
    2 => println("2"),
    3 => println("3"),
  }
}



