{
  "type": "Program",
  "body": [
    {
      "type": "Impl::TopFuncDef",
      "fun_decl": {
        "type": "FunDecl",
        "type_name": null,
        "name": {
          "type": "Binder",
          "name": "init",
          "loc": null
        },
        "has_error": null,
        "is_async": false,
        "decl_params": null,
        "params_loc": null,
        "quantifiers": [],
        "return_type": null,
        "error_type": {
          "type": "ErrorType::NoErrorType"
        },
        "vis": {
          "type": "Visibility::Default"
        },
        "attrs": [],
        "doc": ""
      },
      "decl_body": {
        "type": "DeclBody::DeclBody",
        "local_types": [],
        "expr": {
          "type": "Expr::Let",
          "pattern": {
            "type": "Pattern::Tuple",
            "pats": [
              {
                "type": "Pattern::Var",
                "0": {
                  "type": "Binder",
                  "name": "a",
                  "loc": null
                }
              },
              {
                "type": "Pattern::Var",
                "0": {
                  "type": "Binder",
                  "name": "b",
                  "loc": null
                }
              }
            ],
            "loc": null
          },
          "expr": {
            "type": "Expr::Tuple",
            "exprs": [
              {
                "type": "Expr::Constant",
                "c": {
                  "type": "Constant::Int",
                  "0": "1"
                },
                "loc": null
              },
              {
                "type": "Expr::Constant",
                "c": {
                  "type": "Constant::Int",
                  "0": "2"
                },
                "loc": null
              }
            ],
            "loc": null
          },
          "body": {
            "type": "Expr::Unit",
            "loc": null,
            "faked": false
          },
          "loc": null
        }
      },
      "loc": null
    }
  ]
}